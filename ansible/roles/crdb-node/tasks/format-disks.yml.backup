- name: Ensure disk is present
  become: yes
  wait_for:
    path: "{{ disk_device }}"
    state: present
    timeout: 60

- name: Check if disk is already partitioned
  become: yes
  command: lsblk -o NAME,TYPE "{{ disk_device }}"
  register: disk_check
  changed_when: false

- name: Partition the disk if not already partitioned
  become: yes
  community.general.parted:
    device: "{{ disk_device }}"
    label: gpt
    number: 1
    state: present
    part_start: 0%
    part_end: 100%
  when: "'part' not in disk_check.stdout"

- name: Check if disk is already formatted
  become: yes
  command: blkid -s TYPE -o value {{ disk_device }}1
  register: fs_check
  changed_when: false
  failed_when: false

- name: Format the disk if not already formatted
  become: yes
  filesystem:
    fstype: xfs
    dev: "{{ disk_device }}1"
    force: true
  when: fs_check.stdout != "xfs"

- name: Create mount point
  become: yes
  file:
    path: "{{ crdb_file_location }}"
    state: directory

- name: Mount the disk
  become: yes
  mount:
    path: "{{ crdb_file_location }}"
    src: "{{ disk_device }}1"
    fstype: xfs
    opts: defaults
    state: mounted

- name: Fetch partition UUID
  become: yes
  command: blkid -s UUID -o value {{ disk_device }}1
  register: blkid_output
  changed_when: false

- name: Ensure fstab entry exists
  become: yes
  lineinfile:
    dest: /etc/fstab
    regexp: "^UUID={{ blkid_output.stdout }}"
    line: "UUID={{ blkid_output.stdout }} {{ crdb_file_location }} xfs defaults 0 2"
    state: present

- name: Set ownership and permissions for admin user directory
  become: yes
  file:
    path: "{{ crdb_file_location }}/{{ admin_username }}"
    state: directory
    owner: "{{ admin_username }}"
