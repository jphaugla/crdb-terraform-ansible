---
- name: Verify the disk exists
  become: yes
  command: lsblk -no NAME "{{ disk_device }}"
  register: disk_check
  failed_when: disk_check.rc != 0

- name: Normalize disk path (partition vs raw)
  set_fact:
    target_device: >-
      {{
        (disk_device + '1')
        if (
          ansible_devices[disk_device | basename].partitions is defined
          and ansible_devices[disk_device | basename].partitions | length > 0
        )
        else disk_device
      }}

- name: Check current filesystem type
  become: yes
  command: blkid -s TYPE -o value "{{ target_device }}"
  register: fs_check
  failed_when: false
  changed_when: false

- name: Format the disk if not already formatted or if filesystem differs
  become: yes
  filesystem:
    fstype: xfs
    dev: "{{ target_device }}"
    force: true
  when: fs_check.stdout is undefined or fs_check.stdout != "xfs"

- name: Create mount point
  become: yes
  file:
    path: "{{ crdb_file_location }}"
    state: directory

- name: Check if the disk is mounted
  become: yes
  shell: mount | grep -w "{{ target_device }}"
  register: mount_check
  failed_when: false
  changed_when: false

- name: Mount the disk if not already mounted
  become: yes
  mount:
    path: "{{ crdb_file_location }}"
    src: "{{ target_device }}"
    fstype: xfs
    opts: defaults
    state: mounted
  when: mount_check.stdout == ""

- name: Fetch disk UUID
  become: yes
  command: blkid -s UUID -o value "{{ target_device }}"
  register: blkid_output

- name: Ensure fstab entry exists
  become: yes
  lineinfile:
    dest: /etc/fstab
    line: "UUID={{ blkid_output.stdout }} {{ crdb_file_location }} xfs defaults 0 2"
    state: present

- name: Set ownership and permissions for admin user directory
  become: yes
  file:
    path: "{{ crdb_file_location }}/{{ login_username }}"
    state: directory
    owner: "{{ login_username }}"
    mode: '0755'
