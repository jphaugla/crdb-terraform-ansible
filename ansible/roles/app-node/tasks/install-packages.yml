# -----------------------------
# Debian/Ubuntu
# -----------------------------
- name: Install system packages on Debian/Ubuntu
  become: yes
  ansible.builtin.apt:
    name:
      - gcc
      - g++
      - libpq-dev
      - postgresql-server-dev-all
      - python3.11
      - python3.11-dev
      - python3.11-venv
    state: present
    update_cache: yes
  when: ansible_facts.pkg_mgr == 'apt'

# -----------------------------
# RHEL/CentOS/Amazon Linux 2023
# -----------------------------
- name: Install system packages on RHEL/CentOS/Amazon Linux
  become: yes
  ansible.builtin.package:
    name:
      - gcc
      - gcc-c++
      - postgresql-devel
      - libpq-devel
      - python3.11
      - python3.11-devel
    state: present
  when: ansible_facts.pkg_mgr in ['yum','dnf']

# Ensure pip for Python 3.11 (portable across distros)
- name: Ensure pip is available for Python 3.11
  become: yes
  ansible.builtin.command: python3.11 -m ensurepip --upgrade
  changed_when: false  # safe to re-run

# Create venv and install deps
- name: Create Python 3.11 virtualenv
  become: yes
  ansible.builtin.command: "python3.11 -m venv {{ py311_venv_path }}"
  args:
    creates: "{{ py311_venv_path }}/bin/activate"

- name: Upgrade pip/setuptools/wheel in venv
  become: yes
  ansible.builtin.pip:
    name: [pip, setuptools, wheel]
    state: latest
    virtualenv: "{{ py311_venv_path }}"
    virtualenv_command: "python3.11 -m venv"

- name: Install sqlalchemy and psycopg2 in venv
  become: yes
  ansible.builtin.pip:
    name:
      - "sqlalchemy~=1.4"
      - sqlalchemy-cockroachdb
      - psycopg2
    virtualenv: "{{ py311_venv_path }}"
    virtualenv_command: "python3.11 -m venv"

- name: Ensure venv directory and contents are owned by login_username
  become: yes
  ansible.builtin.file:
    path: "{{ py311_venv_path }}"
    state: directory
    owner: "{{ login_username }}"
    group: "{{ login_username }}"
    recurse: yes

