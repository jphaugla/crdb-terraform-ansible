- name: Debug OS information
  become: yes
  debug:
    msg: >
      The operating system is {{ ansible_facts['distribution'] }}
      and the version is {{ ansible_facts['distribution_version'] }}

- name: Set variable if Amazon Linux
  set_fact:
    is_amazon_linux: "{{ ansible_facts['distribution'] == 'Amazon' }}"

- name: enable postgresql stream 15 for non amazon
  become: yes
  shell: 
    cmd: dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm
  when:
    - not is_amazon_linux|bool

- name: install postgresql  for non amazon
  become: yes
  shell: 
    cmd: dnf -y install postgresql15-server
  when:
    - not is_amazon_linux|bool

- name: install postgresql  for amazon
  become: yes
  shell: 
    cmd: dnf -y install postgresql15-server
  when:
    - is_amazon_linux|bool

- name: postgresql setup non-amazon
  become: yes
  shell:
    cmd: /usr/pgsql-15/bin/postgresql-15-setup initdb 
    creates: /var/lib/pgsql/15/data/postgresql.conf
  when:
    - not is_amazon_linux|bool

- name: postgresql setup amazon
  become: yes
  shell:
    cmd: /bin/postgresql-setup initdb 
    creates: /var/lib/pgsql/data/postgresql.conf
  when:
    - is_amazon_linux|bool

- name: copy pg_hba.conf not amazon
  become: yes
  copy:
    src: pg_hba.conf
    dest: /var/lib/pgsql/15/data/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when:
    - not is_amazon_linux|bool

- name: Configure PostgreSQL replication settings
  hosts: all
  become: yes
  vars:
    postgresql_conf_file: "{{ '/var/lib/pgsql/15/data/postgresql.conf' if is_amazon_linux|bool else '/etc/postgresql/15/main/postgresql.conf' }}"
    postgresql_service_name: "{{ 'postgresql-15' if is_amazon_linux|bool else 'postgresql' }}"
  tasks:
    - name: Append replication configuration to postgresql.conf
      blockinfile:
        path: "{{ postgresql_conf_file }}"
        marker: "# {mark} ANSIBLE MANAGED POSTGRES REPLICATION CONFIG"
        block: |
          # Replication settings
          wal_level = logical
          max_wal_senders = 3
          max_replication_slots = 3
          wal_keep_size = 1024
          hot_standby = on

- name: copy pg_hba.conf amazon
  become: yes
  copy:
    src: pg_hba.conf
    dest: /var/lib/pgsql/data/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when:
    - is_amazon_linux|bool

- name: start postgres non amazon
  become: yes
  shell: 
    cmd: systemctl start postgresql-15
  when:
    - not is_amazon_linux|bool

- name: set to start postgres on startup non amazon
  become: yes
  shell: 
    cmd: systemctl enable postgresql-15
  when:
    - not is_amazon_linux|bool

- name: start postgres amazon
  become: yes
  shell: 
    cmd: systemctl start postgresql
  when:
    - is_amazon_linux|bool

- name: set to start postgres on startup 
  become: yes
  shell: 
    cmd: systemctl enable postgresql
  when:
    - is_amazon_linux|bool

- name: Install psycopg2-binary using pip on Amazon Linux 2023
  become: yes
  pip:
    name: psycopg2-binary
    executable: pip3
  when:
    - is_amazon_linux|bool

- name: Install psycopg2 for Python 3 on Debian/Ubuntu
  become: yes
  apt:
    name: python3-psycopg2
    state: present
  when:
    - not is_amazon_linux|bool

- name: Set PostgreSQL user password (idempotent)
  become: yes
  become_user: postgres
  community.postgresql.postgresql_user:
    name: postgres
    password: "{{ db_admin_password }}"
    login_unix_socket: /var/run/postgresql
