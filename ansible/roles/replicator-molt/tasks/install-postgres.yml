---
# roles/replicator-molt/tasks/install-postgres.yml

- name: Debug OS information
  become: yes
  debug:
    msg: >
      The operating system is {{ ansible_facts['distribution'] }}
      {{ ansible_facts['distribution_version'] }}

- name: Set package manager fact
  set_fact:
    pkg_mgr: "{{ ansible_facts.pkg_mgr }}"

# --------------------------
# Enable PostgreSQL repo (RHEL/CentOS)
# --------------------------
- name: Enable PostgreSQL YUM repo (RHEL/CentOS)
  become: yes
  shell: dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm
  when: pkg_mgr in ['yum','dnf']

# --------------------------
# Install postgresql-server
# --------------------------
- name: Install postgresql-server (RHEL/CentOS)
  become: yes
  dnf:
    name: postgresql15-server
    state: present
  when: pkg_mgr in ['yum','dnf']

- name: Install postgresql-server (Debian/Ubuntu)
  become: yes
  apt:
    name: postgresql
    state: present
    update_cache: yes
  when: pkg_mgr == 'apt'

# --------------------------
# Detect Ubuntu cluster version
# --------------------------
- name: Find installed PostgreSQL cluster version (Debian/Ubuntu)
  become: yes
  command: ls /etc/postgresql
  register: pg_versions
  changed_when: false
  when: pkg_mgr == 'apt'

- name: Set pg_version fact to first cluster dir (Debian/Ubuntu)
  set_fact:
    pg_version: "{{ pg_versions.stdout_lines[0] }}"
  when: pkg_mgr == 'apt'

# --------------------------
# Initialize database
# --------------------------
- name: Initialize PostgreSQL database (RHEL/CentOS)
  become: yes
  shell: /usr/pgsql-15/bin/postgresql-15-setup initdb
  args:
    creates: /var/lib/pgsql/15/data/postgresql.conf
  when: pkg_mgr in ['yum','dnf']

- name: Initialize PostgreSQL database (Debian/Ubuntu)
  become: yes
  shell: pg_createcluster {{ pg_version }} main --start
  args:
    creates: "/etc/postgresql/{{ pg_version }}/main/postgresql.conf"
  when: pkg_mgr == 'apt'

# --------------------------
# Copy pg_hba.conf
# --------------------------
- name: Copy pg_hba.conf (RHEL/CentOS)
  become: yes
  copy:
    src: pg_hba.conf
    dest: /var/lib/pgsql/15/data/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: pkg_mgr in ['yum','dnf']

- name: Copy pg_hba.conf (Debian/Ubuntu)
  become: yes
  copy:
    src: pg_hba.conf
    dest: /etc/postgresql/{{ pg_version }}/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: pkg_mgr == 'apt'

# --------------------------
# Configure replication settings
# --------------------------
- name: Configure PostgreSQL replication settings
  become: yes
  blockinfile:
    path: >-
      {{ pkg_mgr in ['yum','dnf']
         and '/var/lib/pgsql/15/data/postgresql.conf'
         or '/etc/postgresql/' + pg_version + '/main/postgresql.conf' }}
    marker: "# {mark} ANSIBLE MANAGED POSTGRES REPLICATION CONFIG"
    block: |
      wal_level = logical
      max_wal_senders = 3
      max_replication_slots = 3
      wal_keep_size = 1024
      hot_standby = on

# --------------------------
# Start the service
# --------------------------
- name: Start PostgreSQL (RHEL/CentOS)
  become: yes
  systemd:
    name: postgresql-15
    state: started
    enabled: yes
  when: pkg_mgr in ['yum','dnf']

- name: Start PostgreSQL (Debian/Ubuntu)
  become: yes
  systemd:
    name: postgresql
    state: started
    enabled: yes
  when: pkg_mgr == 'apt'

# --------------------------
# Install psycopg2
# --------------------------
- name: Install psycopg2-binary (RHEL/CentOS)
  become: yes
  pip:
    name: psycopg2-binary
    executable: pip3
  when: pkg_mgr in ['yum','dnf']

- name: Install python3-psycopg2 (Debian/Ubuntu)
  become: yes
  apt:
    name: python3-psycopg2
    state: present
    update_cache: yes
  when: pkg_mgr == 'apt'

# --------------------------
# Set PostgreSQL superuser password
# --------------------------
- name: Set PostgreSQL superuser password
  become: yes
  shell: |
    sudo -u postgres psql -v ON_ERROR_STOP=1 --command="ALTER USER postgres WITH PASSWORD '{{ db_admin_password }}';"
  args:
    executable: /bin/bash

