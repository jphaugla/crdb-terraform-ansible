---
# roles/replicator-molt/tasks/install-postgres.yml

- name: Debug OS information
  ansible.builtin.debug:
    msg: "OS={{ ansible_facts['distribution'] }} {{ ansible_facts['distribution_version'] }} pkg_mgr={{ ansible_facts['pkg_mgr'] }}"

- name: Set pkg_mgr fact
  ansible.builtin.set_fact:
    pkg_mgr: "{{ ansible_facts['pkg_mgr'] }}"

- name: Set is_amazon_linux fact
  ansible.builtin.set_fact:
    is_amazon_linux: "{{ ansible_facts['distribution'] == 'Amazon' }}"

# call the Amazon Linux workflow
- name: Install & configure on Amazon Linux
  ansible.builtin.import_tasks: install-postgres-amazon.yml
  when: is_amazon_linux | bool

# call the RHEL/CentOS workflow
- name: Install & configure on RHEL/CentOS
  ansible.builtin.import_tasks: install-postgres-rhel.yml
  when:
    - pkg_mgr in ['yum','dnf']
    - not is_amazon_linux | bool

# call the Ubuntu workflow
- name: Install & configure on Debian/Ubuntu
  ansible.builtin.import_tasks: install-postgres-ubuntu.yml
  when: pkg_mgr == 'apt'

- name: Set PostgreSQL superuser password
  become: yes
  ansible.builtin.shell: |
    sudo -u postgres psql -v ON_ERROR_STOP=1 \
      --command="ALTER USER postgres WITH PASSWORD '{{ db_admin_password }}';"
  args:
    executable: /bin/bash

