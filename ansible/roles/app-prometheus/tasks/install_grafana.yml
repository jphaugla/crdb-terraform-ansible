---
# roles/app-prometheus/tasks/install-grafana.yml

- name: Debug OS information
  become: yes
  ansible.builtin.debug:
    msg: "Distribution={{ ansible_facts['distribution'] }}  pkg_mgr={{ ansible_facts['pkg_mgr'] }}"

# ----------------------------------------
# Install the package
# ----------------------------------------
- name: Import Grafana GPG key (RHEL/CentOS)
  become: yes
  shell: rpm --import https://rpm.grafana.com/gpg.key
  when: ansible_facts['pkg_mgr'] in ['yum','dnf']

- name: Add Grafana YUM repo
  become: yes
  ansible.builtin.template:
    src: grafana.repo.j2
    dest: /etc/yum.repos.d/grafana.repo
    mode: '0644'
  when: ansible_facts['pkg_mgr'] in ['yum','dnf']

- name: Install Grafana (RHEL/CentOS)
  become: yes
  ansible.builtin.dnf:
    name: grafana
    state: latest
  when: ansible_facts['pkg_mgr'] in ['yum','dnf']

- name: Install prerequisites for apt (Debian/Ubuntu)
  become: yes
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - software-properties-common
      - wget
    state: latest
    update_cache: yes
  when: ansible_facts['pkg_mgr'] == 'apt'

- name: Add Grafana GPG key (Debian/Ubuntu)
  become: yes
  ansible.builtin.apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present
  when: ansible_facts['pkg_mgr'] == 'apt'

- name: Add Grafana APT repo (Debian/Ubuntu)
  become: yes
  ansible.builtin.apt_repository:
    repo: deb https://packages.grafana.com/oss/deb stable main
    filename: grafana
    state: present
  when: ansible_facts['pkg_mgr'] == 'apt'

- name: Update apt cache (Debian/Ubuntu)
  become: yes
  ansible.builtin.apt:
    update_cache: yes
  when: ansible_facts['pkg_mgr'] == 'apt'

- name: Install Grafana (Debian/Ubuntu)
  become: yes
  ansible.builtin.apt:
    name: grafana
    state: latest
  when: ansible_facts['pkg_mgr'] == 'apt'

# ----------------------------------------
# Discover the grafana-server binary
# ----------------------------------------
- name: Locate grafana-server executable
  become: yes
  ansible.builtin.find:
    paths:
      - /usr/sbin
      - /usr/share/grafana/bin
    patterns: grafana-server
    file_type: file
    recurse: no
  register: grafana_bins

- name: Fail if grafana-server not found
  ansible.builtin.fail:
    msg: "grafana-server binary not found under /usr/sbin or /usr/share/grafana/bin"
  when: grafana_bins.matched == 0

- name: Set grafana_server_path fact
  ansible.builtin.set_fact:
    grafana_server_path: "{{ grafana_bins.files[0].path }}"

# ----------------------------------------
# Common tasks: environment & systemd unit
# ----------------------------------------
- name: Ensure Grafana environment file exists
  become: yes
  ansible.builtin.file:
    path: /etc/default/grafana-server
    state: touch
    mode: '0644'

- name: Create systemd service unit for Grafana
  become: yes
  ansible.builtin.template:
    src: grafana.service.j2
    dest: /etc/systemd/system/grafana-server.service
    mode: '0644'
  notify: restart grafana-server
